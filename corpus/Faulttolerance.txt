fault tolerance is the property that enables a system to continue operating properly in the event of the failure of or one or more faults within some of its components if its operating quality decreases at all the decrease is proportional to the severity of the failure as compared to a naively designed system in which even a small failure can cause total breakdown fault tolerance is particularly sought after in high-availability or life-critical systems the ability of maintaining functionality when portions of a system break down is referred to as graceful degradation
a fault-tolerant design enables a system to continue its intended operation possibly at a reduced level rather than failing completely when some part of the system fails the term is most commonly used to describe computer systems designed to continue more or less fully operational with perhaps a reduction in throughput or an increase in response time in the event of some partial failure that is the system as a whole is not stopped due to problems either in the hardware or the software an example in another field is a motor vehicle designed so it will continue to be drivable if one of the tires is punctured a structure is able to retain its integrity in the presence of damage due to causes such as fatigue corrosion manufacturing flaws or impact
within the scope of an individual system fault tolerance can be achieved by anticipating exceptional conditions and building the system to cope with them and in general aiming for self-stabilization so that the system converges towards an error-free state however if the consequences of a system failure are catastrophic or the cost of making it sufficiently reliable is very high a better solution may be to use some form of duplication in any case if the consequence of a system failure is so catastrophic the system must be able to use reversion to fall back to a safe mode this is similar to roll-back recovery but can be a human action if humans are present in the loop


a highly fault-tolerant system might continue at the same level of performance even though one or more components have failed for example a building with a backup electrical generator will provide the same voltage to wall outlets even if the grid power fails
a system that is designed to fail safe or fail-secure or fail gracefully whether it functions at a reduced level or fails completely does so in a way that protects people property or data from injury damage intrusion or disclosure in computers a program might fail-safe by executing a graceful exit as opposed to an uncontrolled crash in order to prevent data corruption after experiencing an error a similar distinction is made between failing well and failing badly
fail-deadly is the opposite strategy which can be used in weapon systems that are designed to kill or injure targets even if part of the system is damaged or destroyed
a system that is designed to experience graceful degradation or to fail soft used in computing similar to fail safe operates at a reduced level of performance after some component failures for example a building may operate lighting at reduced levels and elevators at reduced speeds if grid power fails rather than either trapping people in the dark completely or continuing to operate at full power in computing an example of graceful degradation is that if insufficient network bandwidth is available to stream an online video a lower-resolution version might be streamed in place of the high-resolution version progressive enhancement is an example in computing where web pages are available in a basic functional format for older small-screen or limited-capability web browsers but in an enhanced version for browsers capable of handling additional technologies or that have a larger display available
in fault-tolerant computer systems programs that are considered robust are designed to continue operation despite an error exception or invalid input instead of crashing completely software brittleness is the opposite of robustness resilient networks continue to transmit data despite the failure of some links or nodes resilient buildings and infrastructure are likewise expected to prevent complete failure in situations like earthquakes floods or collisions
a system with high failure transparency will alert users that a component failure has occurred even if it continues to operate with full performance so that failure can be repaired or imminent complete failure anticipated likewise a fail-fast component is designed to report at the first point of failure rather than allow downstream components to fail and generate reports then this allows easier diagnosis of the underlying problem and may prevent improper operation in a broken state
if each component in turn can continue to function when one of its subcomponents fails this will allow the total system to continue to operate as well using a passenger vehicle as an example a car can have run-flat tires which each contain a solid rubber core allowing them to be used even if a tire is punctured the punctured run-flat tire may be used for a limited time at a reduced speed
redundancy is the provision of functional capabilities that would be unnecessary in a fault-free environment this can consist of backup components which automatically kick in should one component fail for example large cargo trucks can lose a tire without any major consequences they have many tires and no one tire is critical with the exception of the front tires which are used to steer the idea of incorporating redundancy in order to improve the reliability of a system was pioneered by john von neumann in the 1950s
two kinds of redundancy are possible space redundancy and time redundancy space redundancy provides additional components functions or data items that are unnecessary for fault-free operation space redundancy is further classified into hardware software and information redundancy depending on the type of redundant resources added to the system in time redundancy the computation or data transmission is repeated and the result is compared to a stored copy of the previous result
providing fault-tolerant design for every component is normally not an option associated redundancy brings a number of penalties increase in weight size power consumption cost as well as time to design verify and test therefore a number of choices have to be examined to determine which components should be fault tolerant
an example of a component that passes all the tests is a car's occupant restraint system while we do not normally think of the primary occupant restraint system it is gravity if the vehicle rolls over or undergoes severe g-forces then this primary method of occupant restraint may fail restraining the occupants during such an accident is absolutely critical to safety so we pass the first test accidents causing occupant ejection were quite common before seat belts so we pass the second test the cost of a redundant restraint method like seat belts is quite low both economically and in terms or weight and space so we pass the third test therefore adding seat belts to all vehicles is an excellent idea other supplemental restraint systems such as airbags are more expensive and so pass that test by a smaller margin
the basic characteristics of fault tolerance require
in addition fault-tolerant systems are characterized in terms of both planned service outages and unplanned service outages these are usually measured at the application level and not just at a hardware level the figure of merit is called availability and is expressed as a percentage for example a five nines system would statistically provide 99.999% availability
fault-tolerant systems are typically based on the concept of redundancy
spare components address the first fundamental characteristic of fault tolerance in three ways
all implementations of raid redundant array of independent disks except raid 0 are examples of a fault-tolerant storage device that uses data redundancy
a lockstep fault-tolerant machine uses replicated elements operating in parallel at any time all the replications of each element should be in the same state the same inputs are provided to each replication and the same outputs are expected the outputs of the replications are compared using a voting circuit a machine with two replications of each element is termed dual modular redundant dmr the voting circuit can then only detect a mismatch and recovery relies on other methods a machine with three replications of each element is termed triple modular redundant tmr the voting circuit can determine which replication is in error when a two-to-one vote is observed in this case the voting circuit can output the correct result and discard the erroneous version after this the internal state of the erroneous replication is assumed to be different from that of the other two and the voting circuit can switch to a dmr mode this model can be applied to any larger number of replications
lockstep fault-tolerant machines are most easily made fully synchronous with each gate of each replication making the same state transition on the same edge of the clock and the clocks to the replications being exactly in phase however it is possible to build lockstep systems without this requirement
bringing the replications into synchrony requires making their internal stored states the same they can be started from a fixed initial state such as the reset state alternatively the internal state of one replica can be copied to another replica
one variant of dmr is pair-and-spare two replicated elements operate in lockstep as a pair with a voting circuit that detects any mismatch between their operations and outputs a signal indicating that there is an error another pair operates exactly the same way a final circuit selects the output of the pair that does not proclaim that it is in error pair-and-spare requires four replicas rather than the three of tmr but has been used commercially
fault-tolerant design's advantages are obvious while many of its disadvantages are not
hardware fault tolerance sometimes requires that broken parts be taken out and replaced with new parts while the system is still operational in computing known as hot swapping such a system implemented with a single backup is known as single point tolerant and represents the vast majority of fault-tolerant systems in such systems the mean time between failures should be long enough for the operators to have time to fix the broken devices mean time to repair before the backup also fails it helps if the time between failures is as long as possible but this is not specifically required in a fault-tolerant system
fault tolerance is notably successful in computer applications tandem computers built their entire business on such machines which used single-point tolerance to create their nonstop systems with uptimes measured in years
fail-safe architectures may encompass also the computer software for example by process replication computer science
data formats may also be designed to degrade gracefully html for example is designed to be forward compatible allowing new html entities to be ignored by web browsers which do not understand them without causing the document to be unusable
there is a difference between fault tolerance and systems that rarely have problems for instance the western electric crossbar systems had failure rates of two hours per forty years and therefore were highly fault resistant but when a fault did occur they still stopped operating completely and therefore were not fault tolerant
