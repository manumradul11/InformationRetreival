in integrated circuit design physical design is a step in the standard design cycle which follows after the circuit design at this step circuit representations of the components devices and interconnects of the design are converted into geometric representations of shapes which when manufactured in the corresponding layers of materials will ensure the required functioning of the components this geometric representation is called integrated circuit layout this step is usually split into several sub-steps which include both design and verification and validation of the layout
modern day integrated circuit ic design is split up into front-end design using hdls verification and back-end design or physical design the next step after physical design is the manufacturing process or fabrication process that is done in the wafer fabrication houses fab-houses fabricate designs onto silicon dies which are then packaged into ics
each of the phases mentioned above have design flows associated with them these design flows lay down the process and guide-linesframework for that phase physical design flow uses the technology libraries that are provided by the fabrication houses these technology files provide information regarding the type of silicon wafer used the standard-cells used the layout rules like drc in vlsi etc


typically the ic physical design is categorised into full custom & semi-custom design
one can refer asic for full custom design and fpga for semi-custom design flowsthe reason being that one has the flexibility to designmodify design blocks from vendor provided libraries in asic this flexibility is missing for semi-custom flows like fpga eg altera
the main steps in the asic physical design flow are
these steps are just the basic there are detailed pd flows that are used depending on the tools used and the methodologytechnology some of the toolssoftware used in the back-end design are 
a more detailed physical design flow is shown below here you can see the exact steps and the tools used in each step outlined

the asic physical design flow uses the technology libraries that are provided by the fabrication houses technologies are commonly classified according to minimal feature size standard sizes in the order of miniaturization are 2μm 1μm  0.5μm  0.35μm 0.25μm 180nm 130nm 90nm 65nm 45nm 28nm 22nm 18nm 14nm etc they may be also classified according to major manufacturing approaches n-well process twin-well process soi process etc
physical design is based on a netlist which is the end result of the synthesis process synthesis converts the rtl design usually coded in vhdl or verilog hdl to gate-level descriptions which the next set of tools can readunderstand this netlist contains information on the cells used their interconnections area used and other details typical synthesis tools are
during the synthesis process constraints are applied to ensure that the design meets the required functionality and speed specifications only after the netlist is verified for functionality and timing it is sent for the physical design flow
the first step in the physical design flow is floorplanning floorplanning is the process of identifying structures that should be placed close together and allocating space for them in such a manner as to meet the sometimes conflicting goals of available space cost of the chip required performance and the desire to have everything close to everything else
based on the area of the design and the hierarchy a suitable floorplan is decided upon floorplanning takes into account the macros used in the design memory other ip cores and their placement needs the routing possibilities and also the area of the entire design floorplanning also decides the io structure aspect ratio of the design a bad floorplan will lead to waste-age of die area and routing congestion
in many design methodologies area and speed are considered to be things that should be traded off against each other the reason this is so is probably because there are limited routing resources and the more routing resources that are used the slower the design will operate optimizing for minimum area allows the design to use fewer resources but also allows the sections of the design to be closer together this leads to shorter interconnect distances less routing resources to be used faster end-to-end signal paths and even faster and more consistent place and route times done correctly there are no negatives to floorplanning
as a general rule data-path sections benefit most from floorplanning and random logic state machines and other non-structured logic can safely be left to the placer section of the place and route software
data paths are typically the areas of your design where multiple bits are processed in parallel with each bit being modified the same way with maybe some influence from adjacent bits example structures that make up data paths are adders subtractors counters registers and muxes
partitioning is a process of dividing the chip into small blocks this is done mainly to separate different functional blocks and also to make placement and routing easier partitioning can be done in the rtl design phase when the design engineer partitions the entire design into sub-blocks and then proceeds to design each module these modules are linked together in the main module called the top level module this kind of partitioning is commonly referred to as logical partitioning
before the start of placement optimization all wire load models wlm are removed placement uses rc values from virtual route vr to calculate timing vr is the shortest manhattan distance between two pins vr rcs are more accurate than wlm rcs
placement is performed in four optimization phases
the goal of clock tree synthesis cts is to minimize skew and insertion delay clock is not propagated before cts as shown in the picture after cts hold slack should improve clock tree begins at sdc defined clock source and ends at stop pins of flop there are two types of stop pins known as ignore pins and sync pins ‘don’t touch’ circuits and pins in front end logic synthesis are treated as ‘ignore’ circuits or pins at back end physical synthesis ‘ignore’ pins are ignored for timing analysis if clock is divided then separate skew analysis is necessary
rigidity is the term coined in astro to indicate the relaxation of constraints higher the rigidity tighter is the constraints
in clock tree optimization cto clock can be shielded so that noise is not coupled to other signals but shielding increases area by 12 to 15% since the clock signal is global in nature the same metal layer used for power routing is used for clock also cto is achieved by buffer sizing gate sizing buffer relocation level adjustment and hfn synthesis we try to improve setup slack in pre-placement in placement and post placement optimization before cts stages while neglecting hold slack in post placement optimization after cts hold slack is improved as a result of cts lot of buffers are added generally for 100k gates around 650 buffers are added
there are two types of routing in the physical design process global routing and detailed routing global routing allocates routing resources that are used for connections
physical verification checks the correctness of the generated layout design this includes verifying that the layout
